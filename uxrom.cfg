MEMORY {
    ZP:       start = $18, size = $60, type = rw;
    HEADER:   start = $0, size = $10, type = ro, fill = yes, fillval = $00;
    RAM:      start = $0300, size = $0500, type = rw;

    # UNROM 64K
    PRG0:     start = $8000, size = $4000, fill = yes, fillval = $00, bank=0;
    PRG1:     start = $8000, size = $4000, fill = yes, fillval = $01, bank=1;
    PRG2:     start = $8000, size = $4000, fill = yes, fillval = $02, bank=2;
    PRG3:     start = $C000, size = $4000, fill = yes, fillval = $03;
}

SEGMENTS {
    INESHDR:      load = HEADER, type = ro, align = $10;
    ZEROPAGE:     load = ZP, type = zp;
    BSS:          load = RAM, type = bss, define = yes, align = $100;

    B0_CODE:      load = PRG0, type = ro, optional = yes;
    B1_CODE:      load = PRG1, type = ro, optional = yes;
    B2_CODE:      load = PRG2, type = ro, optional = yes;

    FLAG_DATA:    load = PRG0, type = ro;
    LINE_UNROLLED:load = PRG0, type = ro, align = $100;
    LINE:         load = PRG0, type = ro, align = $100;
    LINE_TABLES:  load = PRG0, type = ro, align = $100;
    LEVEL_FLAGS:  load = PRG0, type = ro, align = $100;

    CHR:           load = PRG1,  type = ro, align = $100, optional = yes;
    MUSIC_DATA:    load = PRG1,  type = ro, align = $100, optional = yes;
    SFX_DATA:      load = PRG1,  type = ro, align = $100, optional = yes;

    RECIP_TABLES:  load = PRG2,  type = ro, align = $100, optional = yes;
    FLAG_NMI_CODE: load = PRG2, type = ro, align = $100;
    NMI_CODE:      load = PRG2, type = ro, align = $100;
    LEVELS:        load = PRG2,  type = ro, align = $100, optional = yes;

#SOUND:        load = PRG2,  type = ro, align = $100, optional = yes;


    MULT_TABLES:  load = PRG3, type = ro, align = $100;
    SMALL_TABLES: load = PRG3, type = ro, align = $100;
    SIN_SCROLL:   load = PRG3, type = ro, align = $100, optional = yes;
    NMI_SYNC:     load = PRG3, type = ro, align = $100, optional = yes;

    CODE:         load = PRG3, type = ro, align = $100;
    PENGUIN:      load = PRG3, type = ro, align = $100, optional = yes;
    RODATA:       load = PRG3, type = ro, align = $100, optional = yes;
    BANK3_END:    load = PRG3, type = ro;
    RESERVED:     load = PRG3, type = ro, start = $FFD0;
    VECTORS:      load = PRG3, type = ro, start = $FFFA;

    BANK0_END:    load = PRG0, type = ro;
    BANK1_END:    load = PRG1, type = ro;
    BANK2_END:    load = PRG2, type = ro;
}

FILES {
    %O: format = bin;
}

